{"version":3,"sources":["services/Student/index.js","container/TeacherList/StudentListOfTeacher.js"],"names":["getStudentListById","TeacherId","axios","get","then","res","console","log","data","catch","err","alert","message","getStudentList","page","size","sortName","sortType","getStudentDetail","studentId","findStudentListByFirstNameAndLastName","firstName","lastName","assignStudentlistToTeacher","teacherId","studentIds","columns","title","dataIndex","key","fixed","render","StudentListOfTeacher","props","params","match","useState","studentList","setStudentList","history","useHistory","useEffect","getListView","id","_embedded","students","ghost","teacher","extra","type","dataSource","onRow","record","onClick","push"],"mappings":"+HAAA,gMACaA,EAAqB,SAACC,GAC/B,OAAOC,IAAMC,IAAN,uEAA0EF,IAC5EG,MAAK,SAAAC,GAEF,OADAC,QAAQC,IAAIF,EAAIG,MACTH,EAAIG,QAEdC,OAAM,SAAAC,GACHC,MAAMD,EAAIE,aAITC,EAAiB,SAACC,EAAKC,EAAKC,EAASC,GAC9C,OAAOf,IAAMC,IAAN,kDAAqDW,EAArD,iBAAkEC,EAAlE,iBAA+EC,EAA/E,YAA2FA,EAA3F,gBAA2GC,IAC7Gb,MAAK,SAAAC,GACF,OAAOA,EAAIG,QAEdC,OAAM,SAAAC,GACHC,MAAMD,EAAIE,aAITM,EAAmB,SAACC,GAC7B,OAAOjB,IAAMC,IAAN,6CAAgDgB,IAClDf,MAAK,SAAAC,GACF,OAAOA,EAAIG,QAEdC,OAAM,SAAAC,GACHC,MAAMD,EAAIE,aAITQ,EAAwC,SAACC,EAAUC,EAASN,EAASC,GAC9E,OAAOf,IAAMC,IAAN,gIAAmIkB,EAAnI,qBAAyJC,EAAzJ,iBAA0KN,EAA1K,YAAsLC,IACxLb,MAAK,SAAAC,GACF,OAAOA,EAAIG,QAEdC,OAAM,SAAAC,GACHC,MAAMD,EAAIE,aAITW,EAA6B,SAACC,EAAUC,GACjD,OAAOvB,IAAMC,IAAN,yCAA4CqB,EAA5C,YAAyDC,IAC3DrB,MAAK,SAAAC,GACF,OAAOA,EAAIG,QAEdC,OAAM,SAAAC,GACHC,MAAMD,EAAIE,c,iIC1ChBc,EAAU,CACZ,CACIC,MAAO,aACPC,UAAW,YACXC,IAAK,YACLC,MAAO,QAEX,CACIH,MAAO,YACPC,UAAW,WACXC,IAAK,WACLC,MAAO,QAEX,CACIH,MAAO,SACPC,UAAW,SACXC,IAAK,SACLC,MAAO,QAEX,CACIH,MAAO,UACPC,UAAW,UACXC,IAAK,YAET,CACIF,MAAO,QACPC,UAAW,QACXC,IAAK,SAET,CACIF,MAAO,SACPE,IAAK,YACLC,MAAO,QACPC,OAAQ,kBAAM,kBAAC,IAAD,gBAyCPC,UAtCf,SAA8BC,GAAQ,IAC3BC,EAAUD,EAAME,MAAhBD,OAD0B,EAEIE,qBAFJ,mBAE1BC,EAF0B,KAEdC,EAFc,KAG3BC,EAAUC,cAChBC,qBAAU,WACNC,MACF,IACF,IAAMA,EAAc,WAChB1C,YAAmBkC,EAAOS,IAAIvC,MAAK,SAAAI,GAC/B8B,EAAe9B,EAAKoC,UAAUC,cAGtC,OACI,6BAGI,kBAAC,IAAD,CACIC,OAAO,EACPnB,MAAOU,GAAW,0BAAuBA,EAAY,GAAGU,QAAQ1B,UAA9C,YAA2DgB,EAAY,GAAGU,QAAQzB,UACpG0B,MAAO,CACH,kBAAC,IAAD,CAAQnB,IAAI,IAAIoB,KAAK,WAArB,oBACA,kBAAC,IAAD,CAAQpB,IAAI,IAAIoB,KAAK,WAArB,qBAIFZ,EACE,kBAAC,IAAD,CACJX,QAASA,EACTwB,WAAYb,EACZc,MAAO,SAACC,GAAD,MAAa,CAChBC,QAAS,kBAAOd,EAAQe,KAAR,qCAA2CF,EAAOT,UALxD,kBAAC,IAAD","file":"static/js/10.0daf6957.chunk.js","sourcesContent":["import axios from 'axios'\r\nexport const getStudentListById = (TeacherId) =>{\r\n    return axios.get(`http://tower.watu.fi:8080/students/search/findByTeacherId?id=${TeacherId}`)\r\n        .then(res =>{\r\n            console.log(res.data);\r\n            return res.data;\r\n        })\r\n        .catch(err =>{\r\n            alert(err.message);\r\n        })\r\n}\r\n\r\nexport const getStudentList = (page,size,sortName,sortType) =>{\r\n    return axios.get(`http://tower.watu.fi:8080/students?page=${page}&size=${size}&sort=${sortName}&${sortName}.dir=${sortType}`)\r\n        .then(res =>{\r\n            return res.data;\r\n        })\r\n        .catch(err =>{\r\n            alert(err.message);\r\n        })\r\n}\r\n\r\nexport const getStudentDetail = (studentId) =>{\r\n    return axios.get(`http://tower.watu.fi:8080/students/${studentId}`)\r\n        .then(res =>{\r\n            return res.data;\r\n        })\r\n        .catch(err =>{\r\n            alert(err.message);\r\n        })\r\n}\r\n\r\nexport const findStudentListByFirstNameAndLastName = (firstName,lastName,sortName,sortType) =>{\r\n    return axios.get(`http://tower.watu.fi:8080/students/search/findByFirstNameIgnoreCaseContainingOrLastNameIgnoreCaseContaining?firstName=${firstName}&lastName=${lastName}&sort=${sortName},${sortType}`)\r\n        .then(res =>{\r\n            return res.data;\r\n        })\r\n        .catch(err =>{\r\n            alert(err.message);\r\n        })\r\n}\r\n\r\nexport const assignStudentlistToTeacher = (teacherId,studentIds) =>{\r\n    return axios.get(`http://tower.watu.fi:8080/plan/${teacherId}/${studentIds}`)\r\n        .then(res =>{\r\n            return res.data;\r\n        })\r\n        .catch(err =>{\r\n            alert(err.message);\r\n        })\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport 'antd/dist/antd.css';\r\nimport { Table, PageHeader, Button,Spin} from 'antd';\r\nimport {getStudentListById} from '../../services/Student'\r\n\r\nconst columns = [\r\n    {\r\n        title: 'First Name',\r\n        dataIndex: 'firstName',\r\n        key: 'firstName',\r\n        fixed: 'left',\r\n    },\r\n    {\r\n        title: 'Last Name',\r\n        dataIndex: 'lastName',\r\n        key: 'lastName',\r\n        fixed: 'left',\r\n    },\r\n    {\r\n        title: 'Period',\r\n        dataIndex: 'period',\r\n        key: 'period',\r\n        fixed: 'left',\r\n    },\r\n    {\r\n        title: 'Subject',\r\n        dataIndex: 'subject',\r\n        key: 'subjects',\r\n    },\r\n    {\r\n        title: 'Grade',\r\n        dataIndex: 'grade',\r\n        key: 'grade',\r\n    },\r\n    {\r\n        title: 'Action',\r\n        key: 'operation',\r\n        fixed: 'right',\r\n        render: () => <Button>Edit</Button>,\r\n    },\r\n];\r\nfunction StudentListOfTeacher(props) {\r\n    const {params} = props.match;\r\n    const [studentList,setStudentList] = useState();\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        getListView();\r\n    },[]);\r\n    const getListView = () =>{\r\n        getStudentListById(params.id).then(data => {\r\n            setStudentList(data._embedded.students)\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            {/* {console.log(params)}\r\n            students history.... {params.id} */}\r\n            <PageHeader\r\n                ghost={false}\r\n                title={studentList && `Student List of ${studentList[0].teacher.firstName} ${studentList[0].teacher.lastName}`}\r\n                extra={[\r\n                    <Button key=\"1\" type=\"primary\">Genrate Calender</Button>,\r\n                    <Button key=\"2\" type=\"primary\">Launch Schedule</Button>\r\n                ]}\r\n            >\r\n               \r\n                {!studentList?<Spin/>:\r\n                    <Table \r\n                columns={columns} \r\n                dataSource={studentList}\r\n                onRow={(record) => ({\r\n                    onClick: () => (history.push(`/studentlist/studentDetail/${record.id}`))\r\n                })} \r\n                />\r\n                }\r\n            </PageHeader>\r\n        </div>\r\n    )\r\n}\r\nexport default StudentListOfTeacher\r\n"],"sourceRoot":""}