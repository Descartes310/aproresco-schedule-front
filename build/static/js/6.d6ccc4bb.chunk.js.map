{"version":3,"sources":["services/Student/index.js","container/TeacherList/StudentListOfTeacher.js"],"names":["getStudentListById","TeacherId","axios","get","process","then","res","console","log","data","getStudentList","page","size","getStudentListByFirstName","name","getStudentListByLastName","columns","title","dataIndex","key","fixed","render","StudentListOfTeacher","props","params","match","useState","studentList","setStudentList","useEffect","getListView","id","_embedded","students","ghost","teacher","firstName","lastName","extra","type","dataSource"],"mappings":"8HAAA,8JACaA,EAAqB,SAACC,GAC/B,OAAOC,IAAMC,IAAN,UAAaC,4BAAb,+CAAsFH,IACxFI,MAAK,SAAAC,GAEF,OADAC,QAAQC,IAAIF,EAAIG,MACTH,EAAIG,SAIVC,EAAiB,SAACC,EAAKC,GAChC,OAAOV,IAAMC,IAAN,UAAaC,4BAAb,0BAAiEO,EAAjE,iBAA8EC,IAChFP,MAAK,SAAAC,GACF,OAAOA,EAAIG,SAIVI,EAA4B,SAACC,GACtC,OAAOZ,IAAMC,IAAN,UAAaC,4BAAb,iDAAwFU,IAC1FT,MAAK,SAAAC,GACF,OAAOA,EAAIG,SAIVM,EAA2B,SAACD,GACrC,OAAOZ,IAAMC,IAAN,UAAaC,4BAAb,gDAAuFU,IACzFT,MAAK,SAAAC,GACF,OAAOA,EAAIG,U,0HCrBjBO,EAAU,CACZ,CACIC,MAAO,aACPC,UAAW,YACXC,IAAK,YACLC,MAAO,QAEX,CACIH,MAAO,YACPC,UAAW,WACXC,IAAK,WACLC,MAAO,QAEX,CACIH,MAAO,SACPC,UAAW,SACXC,IAAK,SACLC,MAAO,QAEX,CACIH,MAAO,UACPC,UAAW,UACXC,IAAK,YAET,CACIF,MAAO,QACPC,UAAW,QACXC,IAAK,SAET,CACIF,MAAO,SACPE,IAAK,YACLC,MAAO,QACPC,OAAQ,kBAAM,kBAAC,IAAD,gBAqCPC,UAlCf,SAA8BC,GAAQ,IAC3BC,EAAUD,EAAME,MAAhBD,OAD0B,EAEIE,qBAFJ,mBAE1BC,EAF0B,KAEdC,EAFc,KAGjCC,qBAAU,WACNC,MACF,IACF,IAAMA,EAAc,WAChB9B,YAAmBwB,EAAOO,IAAI1B,MAAK,SAAAI,GAC/BmB,EAAenB,EAAKuB,UAAUC,cAGtC,OACI,6BAGI,kBAAC,IAAD,CACIC,OAAO,EACPjB,MAAOU,GAAW,0BAAuBA,EAAY,GAAGQ,QAAQC,UAA9C,YAA2DT,EAAY,GAAGQ,QAAQE,UACpGC,MAAO,CACH,kBAAC,IAAD,CAAQnB,IAAI,IAAIoB,KAAK,WAArB,oBACA,kBAAC,IAAD,CAAQpB,IAAI,IAAIoB,KAAK,WAArB,qBAIFZ,EACE,kBAAC,IAAD,CACJX,QAASA,EACTwB,WAAYb,IAHE,kBAAC,IAAD","file":"static/js/6.d6ccc4bb.chunk.js","sourcesContent":["import axios from 'axios'\r\nexport const getStudentListById = (TeacherId) =>{\r\n    return axios.get(`${process.env.REACT_APP_BASE_API_URL}/students/search/findByTeacherId?id=${TeacherId}`)\r\n        .then(res =>{\r\n            console.log(res.data);\r\n            return res.data;\r\n        })\r\n}\r\n\r\nexport const getStudentList = (page,size) =>{\r\n    return axios.get(`${process.env.REACT_APP_BASE_API_URL}/students?page=${page}&size=${size}`)\r\n        .then(res =>{\r\n            return res.data;\r\n        })\r\n}\r\n\r\nexport const getStudentListByFirstName = (name) =>{\r\n    return axios.get(`${process.env.REACT_APP_BASE_API_URL}/students/search/findByFirstName?name=${name}`)\r\n        .then(res =>{\r\n            return res.data;\r\n        })\r\n}\r\n\r\nexport const getStudentListByLastName = (name) =>{\r\n    return axios.get(`${process.env.REACT_APP_BASE_API_URL}/students/search/findByLastName?name=${name}`)\r\n        .then(res =>{\r\n            return res.data;\r\n        })\r\n}","import React,{useState,useEffect} from 'react'\r\nimport 'antd/dist/antd.css';\r\nimport { Table, PageHeader, Button,Spin} from 'antd';\r\nimport {getStudentListById} from '../../services/Student'\r\n\r\nconst columns = [\r\n    {\r\n        title: 'First Name',\r\n        dataIndex: 'firstName',\r\n        key: 'firstName',\r\n        fixed: 'left',\r\n    },\r\n    {\r\n        title: 'Last Name',\r\n        dataIndex: 'lastName',\r\n        key: 'lastName',\r\n        fixed: 'left',\r\n    },\r\n    {\r\n        title: 'Period',\r\n        dataIndex: 'period',\r\n        key: 'period',\r\n        fixed: 'left',\r\n    },\r\n    {\r\n        title: 'Subject',\r\n        dataIndex: 'subject',\r\n        key: 'subjects',\r\n    },\r\n    {\r\n        title: 'Grade',\r\n        dataIndex: 'grade',\r\n        key: 'grade',\r\n    },\r\n    {\r\n        title: 'Action',\r\n        key: 'operation',\r\n        fixed: 'right',\r\n        render: () => <Button>Edit</Button>,\r\n    },\r\n];\r\nfunction StudentListOfTeacher(props) {\r\n    const {params} = props.match;\r\n    const [studentList,setStudentList] = useState();\r\n    useEffect(() => {\r\n        getListView();\r\n    },[]);\r\n    const getListView = () =>{\r\n        getStudentListById(params.id).then(data => {\r\n            setStudentList(data._embedded.students)\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            {/* {console.log(params)}\r\n            students history.... {params.id} */}\r\n            <PageHeader\r\n                ghost={false}\r\n                title={studentList && `Student List of ${studentList[0].teacher.firstName} ${studentList[0].teacher.lastName}`}\r\n                extra={[\r\n                    <Button key=\"1\" type=\"primary\">Genrate Calender</Button>,\r\n                    <Button key=\"2\" type=\"primary\">Launch Schedule</Button>\r\n                ]}\r\n            >\r\n               \r\n                {!studentList?<Spin/>:\r\n                    <Table \r\n                columns={columns} \r\n                dataSource={studentList} \r\n                />\r\n                }\r\n            </PageHeader>\r\n        </div>\r\n    )\r\n}\r\nexport default StudentListOfTeacher\r\n"],"sourceRoot":""}