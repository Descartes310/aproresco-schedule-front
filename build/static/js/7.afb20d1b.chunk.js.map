{"version":3,"sources":["components/TeacherList/SearchFilter.js","container/TeacherList/index.js","services/Teacher/index.js"],"names":["Option","Select","SearchFilter","changeInput","defultType","searchList","layout","Item","defaultValue","onChange","val","target","name","value","type","placeholder","onClick","columns","title","render","record","firstName","lastName","key","fixed","dataIndex","subjects","map","sub","grades","grad","TeacherList","history","useHistory","useState","teacherList","setTeacherList","totalCount","pageIndex","pageSize","tableProps","setTableProps","searchValue","searchType","search","setSearch","useEffect","getListView","page","size","axios","get","then","res","data","_embedded","teachers","totalElements","console","log","process","getTeacherListByLastName","ghost","extra","e","className","dataSource","pagination","filters","sorter","current","total","showTotal","range","onRow","push","id"],"mappings":"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","file":"static/js/7.afb20d1b.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Form, Select, Input, Button } from 'antd'\r\n\r\nconst { Option } = Select;\r\nconst SearchFilter = ({changeInput,defultType,searchList}) => {\r\n\r\n    return (\r\n        <Form layout=\"inline\">\r\n            <Form.Item>\r\n                <Select\r\n                    defaultValue={defultType}\r\n                    onChange={(val) =>\r\n\t\t\t\t\t\tchangeInput({ target: { name: 'searchType', value: val } })\r\n\t\t\t\t\t}\r\n                >\r\n                    <Option value=\"firstName\">First Name</Option>\r\n                    <Option value=\"lastName\">Last Name</Option>\r\n                </Select>\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Name\"\r\n                    name=\"searchValue\"\r\n                    onChange={changeInput}\r\n                />\r\n            </Form.Item>\r\n            <Button onClick={searchList}> Search </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchFilter\r\n","import React, { useEffect, useState } from 'react'\r\nimport 'antd/dist/antd.css';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Table, PageHeader, Button, Spin} from 'antd';\r\nimport { getTeacherList, getTeacherListByFirstName, getTeacherListByLastName } from '../../services/Teacher'\r\n\r\nimport SearchFilter from '../../components/TeacherList/SearchFilter'\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Name',\r\n        render: (record) => (\r\n            <div>\r\n                {record.firstName + \" \" + record.lastName}\r\n            </div>\r\n        ),\r\n        key: 'name',\r\n        fixed: 'left',\r\n    },\r\n    {\r\n        title: 'Period',\r\n        dataIndex: 'period',\r\n        key: 'period',\r\n    },\r\n    {\r\n        title: 'Subjects',\r\n        key: 'subjects',\r\n        render: (record) => (\r\n            <div>\r\n                {record.subjects.map((sub) => {\r\n                    return <span>{sub}, </span>\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n    ,\r\n    {\r\n        title: 'Grades',\r\n        key: 'grades',\r\n        render: (record) => (\r\n            <div>\r\n                {record.grades.map((grad) => {\r\n                    return <span>{grad}, </span>\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n    ,\r\n    {\r\n        title: 'Student Count',\r\n        dataIndex: 'studentCount',\r\n        key: 'studentCount',\r\n    },\r\n    {\r\n        title: 'Action',\r\n        key: 'operation',\r\n        fixed: 'right',\r\n        render: (record) => <Button>Edit</Button>,\r\n    },\r\n];\r\nfunction TeacherList() {\r\n    const history = useHistory();\r\n    const [teacherList, setTeacherList] = useState();\r\n    const [tableProps, setTableProps] = useState({\r\n        totalCount: 0,\r\n        pageIndex: 0,\r\n        pageSize: 30,\r\n    });\r\n    const [search, setSearch] = useState({\r\n        searchValue: \"\",\r\n        searchType: \"firstName\",\r\n    })\r\n    useEffect(() => {\r\n        getListView();\r\n    },[tableProps.pageIndex]);\r\n\r\n    const getListView = () => {\r\n        if (search.searchValue === \"\") {\r\n            getTeacherList(tableProps.pageIndex, tableProps.pageSize).then(data => {\r\n                setTeacherList(data._embedded.teachers)\r\n                setTableProps({\r\n                    ...tableProps,\r\n                    totalCount: data.page.totalElements,\r\n                });\r\n            })\r\n        }\r\n        else {\r\n            if (search.searchType === \"firstName\") {\r\n                getTeacherListByFirstName(search.searchValue).then(data => {\r\n                    setTeacherList(data._embedded.teachers)\r\n                    setTableProps({\r\n                        totalCount: 1,\r\n                        pageIndex: 0,\r\n                        pageSize: 30,\r\n                    });\r\n                })\r\n            }\r\n            else if (search.searchType === \"lastName\") {\r\n                getTeacherListByLastName(search.searchValue).then(data => {\r\n                    setTeacherList(data._embedded.teachers)\r\n                    setTableProps({\r\n                        totalCount: 1,\r\n                        pageIndex: 0,\r\n                        pageSize: 30,\r\n                    });\r\n                })\r\n            }\r\n        }\r\n    }\r\n    const handleTableChange = (pagination, filters, sorter) => {\r\n        setTableProps({\r\n            ...tableProps,\r\n            pageIndex: pagination.current,\r\n            pageSize: pagination.pageSize,\r\n        });\r\n        // getListView();\r\n    };\r\n    const changeSearch = (e) => {\r\n        const { name, value } = e.target;\r\n        setSearch({ ...search, [name]: value });\r\n    };\r\n    const searchList = () => {\r\n        getListView();\r\n    }\r\n    return (\r\n        <PageHeader\r\n            ghost={false}\r\n            title=\"Teacher List View\"\r\n            extra={[\r\n                <Button key=\"1\" type=\"primary\">Genrate Calender</Button>,\r\n                <Button key=\"2\" type=\"primary\">Launch Schedule</Button>,\r\n            ]}\r\n        >\r\n            <SearchFilter\r\n                changeInput={changeSearch}\r\n                searchList={searchList}\r\n                defultType={search.searchType}\r\n            />\r\n            {!teacherList ? <Spin className=\"loading-table\"/>: \r\n            <Table\r\n                className=\"table-padding\"\r\n                columns={columns}\r\n                dataSource={teacherList}\r\n                onChange={handleTableChange}\r\n                pagination={{\r\n                    total: tableProps.totalCount,\r\n                    pageSize: tableProps.pageSize,\r\n                    showTotal: (total, range) => `${range[0]}-${range[1]} out of ${total}`,\r\n                }}\r\n                onRow={(record) => ({\r\n                    onClick: () => (history.push(`/studentlist/teacher/${record.id}`))\r\n                })}\r\n            />}\r\n\r\n        </PageHeader>\r\n    )\r\n}\r\nexport default TeacherList\r\n","import axios from 'axios'\r\nexport const getTeacherList = (page,size) =>{\r\n    return axios.get(`http://tower.watu.fi:8080/teachers?page=${page}&size=${size}`)\r\n        .then(res =>{\r\n            return res.data;\r\n        })\r\n}\r\n\r\nexport const getTeacherListByFirstName = (name) =>{\r\n    return axios.get(`http://tower.watu.fi:8080/teachers/search/findByFirstName?name=${name}`)\r\n        .then(res =>{\r\n            console.log(\"env : \", process.env.REACT_APP_BASE_API_URL)\r\n            return res.data;\r\n        })\r\n}\r\n\r\nexport const getTeacherListByLastName = (name) =>{\r\n    return axios.get(`http://tower.watu.fi:8080/teachers/search/findByLastName?name=${name}`)\r\n        .then(res =>{\r\n            return res.data;\r\n        })\r\n}"],"sourceRoot":""}