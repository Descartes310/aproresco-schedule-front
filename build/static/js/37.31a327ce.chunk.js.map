{"version":3,"sources":["services/routes.js","services/Student/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","container/StudentProfile/StudentDetails.js"],"names":["SERVER_ADDRESS","OAUTH","GRANT_TYPE","CLIENT_ID","CLIENT_SECRET","getStudentListById","btoa","routes","TeacherId","type","axios","get","then","res","console","log","data","catch","err","getStudentListByDate","start","end","page","size","sortName","sortType","getParentProfile","getTenant","key","getScheduleByDate","gradeMin","gradeMax","getSchedule","grade","JSON","parse","localStorage","getItem","id","getCountry","getStudentProfileByDate","getTeacherProfileByDate","getShortMessagesByDate","getStudentDetail","studentId","findStudentListByFirstNameAndLastName","firstName","findParentProfileByEmail","email","findScheduleByGrade","findStudentProfileByFirstNameAndLastName","findTeacherProfileByFirstNameAndLastName","getShortMessages","getChild","getShortMessagesTemplates","deleteStudentBooking","studentIds","assignStudentToAnotherTeacher","teacherId","student_ids","split","forEach","item","push","patch","assignMeetingToAnotherTeacher","url","bridgeManagement","status","editSubject","subject","getBooking","editSubjectGrade","subjects","grades","deleteSchedule","ids","d","i","length","delete","deleteStudentProfiles","deleteTeacherProfile","deleteParents","deleteAvailabilities","deleteBookings","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","StudentDetail","props","location","useLocation","history","useHistory","match","params","useState","bookings","setBookings","bookingsLoading","setBookingsLoading","state","student","studentDetail","useEffect","getDetailView","content","elt","studentProfile","lastName","onlineStatus","schedule","finally","columns","title","render","record","style","display","flexDirection","alignItems","lastSeenRoom","icon","faCircle","color","backgroundColor","border","cursor","width","onClick","e","stopPropagation","textAlign","substring","fixed","local","format","withTitle","startDate","endDate","dataIndex","ghost","extra","fontSize","marginTop","marginBottom","gutter","hoverable","bordered","marginLeft","className","span","window","open","conferenceUrl","includes","parent","schoolName","schoolBoard","dataSource","rowKey"],"mappings":"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","file":"static/js/37.31a327ce.chunk.js","sourcesContent":["// export const SERVER_ADDRESS = 'https://tower.watu.fi:8443';\nexport const SERVER_ADDRESS = 'https://meet.appui.io:8443';\n// export const SERVER_ADDRESS = 'https://meet.appui.io:7443';\n\nexport const OAUTH = {\n    GRANT_TYPE: 'client_credentials',\n    CLIENT_ID: '1095225836707-p73rgbikb2dbniu8pjdgso14slpir3nf.apps.googleusercontent.com',\n    CLIENT_SECRET: 'QBkD6wvItNsLttKtucXjWV1V'\n}\n\n// \"start\": \"set PORT=3006 && HTTPS=true SSL_CRT_FILE=/home/linuxbrew/.linuxbrew/Cellar/mkcert/1.4.3/bin/localhost.pem SSL_KEY_FILE=/home/linuxbrew/.linuxbrew/Cellar/mkcert/1.4.3/bin/localhost-key.pem react-scripts start\",\n// CLIENT_ID: '631785752296-26dcjnpcnjma16s630fcvhivhi8qsdg6.apps.googleusercontent.com',","import axios from 'axios';\nimport * as routes from '../routes';\n\n\nconst headers = {\n    'Content-type': 'multipart/form-data',\n    Accept: 'application/json',\n    Authorization: 'Basic ' + btoa(routes.OAUTH.CLIENT_ID + \":\" + routes.OAUTH.CLIENT_SECRET)\n}\n\nexport const getStudentListById = (TeacherId, type = 'availabilityId') => {\n    // return axios.get(`${routes.SERVER_ADDRESS}/teacher-availability/${TeacherId}/student-bookings`)\n    return axios.get(`${routes.SERVER_ADDRESS}/search/student-bookings?${type}=${TeacherId}`)\n        .then(res => {\n            console.log(res.data);\n            return res.data;\n        })\n        .catch(err => {\n            //alert(err.message);\n        })\n}\n\nexport const getStudentList = (page, size, sortName, sortType) => {\n\n    return axios.get(`${routes.SERVER_ADDRESS}/search/student-bookings?page=${page}&size=${size}&sort=${sortName},${sortType}`)\n        .then(res => {\n            return res.data;\n        })\n        .catch(err => {\n            //alert(err.message);\n        })\n}\n\nexport const getStudentListByDate = (start, end, page, size, sortName, sortType) => {\n    return axios.get(`${routes.SERVER_ADDRESS}/search/student-bookings?startDate=${start}&endDate=${end}&page=${page}&size=${size}&sort=${sortName},${sortType}`)\n        .then(res => {\n            return res.data;\n        })\n        .catch(err => {\n            //alert(err.message);\n        })\n}\n\nexport const getParentProfile = (start, end, page, size, sortName, sortType) => {\n    return axios.get(`${routes.SERVER_ADDRESS}/search/student-parents?page=${page}&size=${size}&sort=${sortName},${sortType}`)\n        .then(res => {\n            return res.data;\n        })\n        .catch(err => {\n            //alert(err.message);\n        })\n}\n\nexport const getTenant = (key) => {\n    return axios.get(`${routes.SERVER_ADDRESS}/tenant-profile/${key}`)\n        .then(res => {\n            return res.data;\n        })\n        .catch(err => {\n        })\n}\n\nexport const getScheduleByDate = (gradeMin, gradeMax, start, end, page, size, sortName, sortType) => {\n    return axios.get(`${routes.SERVER_ADDRESS}/search/schedules?gradeMin=${gradeMin}&gradeMax=${gradeMax}&startDate=${start}&endDate=${end}&page=${page}&size=${size}&sort=${sortName},${sortType}`)\n        .then(res => {\n            return res.data;\n        })\n        .catch(err => {\n            //alert(err.message);\n        })\n}\n\nexport const getSchedule = (grade) => {\n    let page = 0;\n    let size = 100;\n    let filter = 'startDate';\n    let sort = 'asc';\n    let tenant = JSON.parse(localStorage.getItem(\"tenant\"+JSON.parse(localStorage.getItem(\"user\")).id));\n    return axios.get(`${routes.SERVER_ADDRESS}/search/schedules?gradeMin=${0}&gradeMax=${100}&page=${page}&size=${size}&sort=${filter},${sort}`)\n        .then(res => {\n            return res.data;\n        })\n}\n\n\nexport const getCountry = () => {\n    return axios.get(`http://ip-api.com/json`)\n        .then(res => {\n            return res.data;\n        })\n}\n\nexport const getStudentProfileByDate = (start, end, page, size, sortName, sortType) => {\n    return axios.get(`${routes.SERVER_ADDRESS}/search/student-profiles?page=${page}&size=${size}&sort=${sortName},${sortType}`)\n        .then(res => {\n            return res.data;\n        })\n        .catch(err => {\n            //alert(err.message);\n        })\n}\n\nexport const getTeacherProfileByDate = (start, end, page, size, sortName, sortType) => {\n    return axios.get(`${routes.SERVER_ADDRESS}/search/teacher-profiles?page=${page}&size=${size}&sort=${sortName},${sortType}`)\n        .then(res => {\n            return res.data;\n        })\n        .catch(err => {\n            //alert(err.message);\n        })\n}\n\nexport const getShortMessagesByDate = (type, start, end, page, size, sortName, sortType) => {\n    return axios.get(`${routes.SERVER_ADDRESS}/search/customer-messages?category=${type}&startDate=${start}&endDate=${end}&page=${page}&size=${size}&sort=${sortName},${sortType}`)\n        .then(res => {\n            return res.data;\n        })\n        .catch(err => {\n            //alert(err.message);\n        })\n}\n\nexport const getStudentDetail = (studentId) => {\n    return axios.get(`${routes.SERVER_ADDRESS}/student-bookings/${studentId}`)\n        .then(res => {\n            return res.data;\n        })\n        .catch(err => {\n            //alert(err.message);\n        })\n}\n\nexport const getBookings = (studentId) => {\n    return axios.get(`${routes.SERVER_ADDRESS}/student-bookings/${studentId}`)\n        .then(res => {\n            return res.data;\n        })\n        .catch(err => {\n            //alert(err.message);\n        })\n}\n\nexport const findStudentListByFirstNameAndLastName = (firstName, start, end, page, size, sortName, sortType) => {\n    return axios.get(`${routes.SERVER_ADDRESS}/search/student-bookings?firstName=${firstName}&startDate=${start}&endDate=${end}&page=${page}&size=${size}&sort=${sortName},${sortType}`)\n        .then(res => {\n            return res.data;\n        })\n        .catch(err => {\n            //alert(err.message);\n        })\n}\n\nexport const findParentProfileByEmail = (email, start, end, page, size, sortName, sortType) => {\n    return axios.get(`${routes.SERVER_ADDRESS}/search/student-parents?email=${email}&page=${page}&size=${size}&sort=${sortName},${sortType}`)\n        .then(res => {\n            return res.data;\n        })\n        .catch(err => {\n            //alert(err.message);\n        })\n}\n\nexport const findScheduleByGrade = (gradeMin, gradeMax, start, end, page, size, sortName, sortType) => {\n    return axios.get(`${routes.SERVER_ADDRESS}/search/schedules?gradeMin=${gradeMin}&gradeMax=${gradeMax}&startDate=${start}&endDate=${end}&page=${page}&size=${size}&sort=${sortName},${sortType}`)\n        .then(res => {\n            return res.data;\n        })\n        .catch(err => {\n            //alert(err.message);\n        })\n}\n\nexport const findStudentProfileByFirstNameAndLastName = (firstName, start, end, page, size, sortName, sortType) => {\n    return axios.get(`${routes.SERVER_ADDRESS}/search/student-profiles?firstName=${firstName}&page=${page}&size=${size}&sort=${sortName},${sortType}`)\n        .then(res => {\n            return res.data;\n        })\n        .catch(err => {\n            //alert(err.message);\n        })\n}\n\nexport const findTeacherProfileByFirstNameAndLastName = (firstName, start, end, page, size, sortName, sortType) => {\n    //return axios.get(`${routes.SERVER_ADDRESS}/students_bookings/search/findByStudentProfileFirstNameIgnoreCaseContainingOrStudentProfileLastNameIgnoreCaseContaining?firstName=${firstName}&lastName=${lastName}&sort=${sortName},${sortType}`)\n    return axios.get(`${routes.SERVER_ADDRESS}/search/teacher-profiles?firstName=${firstName}&page=${page}&size=${size}&sort=${sortName},${sortType}`)\n        .then(res => {\n            return res.data;\n        })\n        .catch(err => {\n            //alert(err.message);\n        })\n}\n\nexport const getShortMessages = (type, firstName, start, end, page, size, sortName, sortType) => {\n    //return axios.get(`${routes.SERVER_ADDRESS}/students_bookings/search/findByStudentProfileFirstNameIgnoreCaseContainingOrStudentProfileLastNameIgnoreCaseContaining?firstName=${firstName}&lastName=${lastName}&sort=${sortName},${sortType}`)\n    return axios.get(`${routes.SERVER_ADDRESS}/search/customer-messages?category=${type}&firstName=${firstName}&startDate=${start}&endDate=${end}&page=${page}&size=${size}&sort=${sortName},${sortType}`)\n        .then(res => {\n            return res.data;\n        })\n        .catch(err => {\n            //alert(err.message);\n        })\n}\n\nexport const getChild = (id) => {\n    return axios.get(`${routes.SERVER_ADDRESS}/search/student-profiles?parentId=${id}`)\n        .then(res => {\n            return res.data;\n        })\n}\n\nexport const getShortMessagesTemplates = (type, page, size, sortName, sortType) => {\n    //return axios.get(`${routes.SERVER_ADDRESS}/students_bookings/search/findByStudentProfileFirstNameIgnoreCaseContainingOrStudentProfileLastNameIgnoreCaseContaining?firstName=${firstName}&lastName=${lastName}&sort=${sortName},${sortType}`)\n    return axios.get(`${routes.SERVER_ADDRESS}/search/customer-message-templates?category=${type}&page=${page}&size=${size}`)\n        .then(res => {\n            return res.data;\n        })\n        .catch(err => {\n            //alert(err.message);\n        })\n}\n\nexport const assignStudentlistToTeacher = (teacherId, studentIds) => {\n    return axios.get(`${routes.SERVER_ADDRESS}/schedule/${teacherId}/${studentIds}`)\n        .then(res => {\n            return res.data;\n        })\n        .catch(err => {\n            //alert(err.message);\n        })\n}\n\nexport const deleteStudentBooking = (studentIds) => {\n    return axios.get(`${routes.SERVER_ADDRESS}/student-bookings/disable/${studentIds}`)\n        .then(res => {\n            return res.data;\n        })\n        .catch(err => {\n            //alert(err.message);\n        })\n}\n\nexport const assignStudentToAnotherTeacher = (teacherId, studentIds) => {\n    let student_ids = [];\n\n    studentIds.split(',').forEach(id => {\n        let item = {};\n        item.id = id;\n        student_ids.push(item);\n    });\n\n    let data = {\n        \"studentBookings\":\n            student_ids\n    }\n    // console.log(`${routes.SERVER_ADDRESS}/meet/assign/${studentIds}/${teacherId}`);\n    return axios.patch(`${routes.SERVER_ADDRESS}/teacher-availability/${teacherId}`, data)\n        .then(res => {\n            return res.data;\n        })\n        .catch(err => {\n            //alert(err.message);\n        })\n}\n\nexport const assignMeetingToAnotherTeacher = (teacherId, url) => {\n    let data = {\n        \"teacherProfile\": {\n            \"conferenceUrl\": url\n        }\n    }\n    return axios.patch(`${routes.SERVER_ADDRESS}/teacher-availability/${teacherId}`, data)\n        .then(res => {\n            return res.data;\n        })\n        .catch(err => {\n            //alert(err.message);\n        })\n}\n\nexport const bridgeManagement = (status) => {\n    return axios.get(`${routes.SERVER_ADDRESS}/bridge?open=${status}`)\n        .then(res => {\n            return res.data;\n        })\n        .catch(err => {\n            //alert(err.message);\n        })\n}\n\nexport const persistManagement = (status) => {\n    return axios.get(`${routes.SERVER_ADDRESS}/meet/bridge?persist=${status}`)\n        .then(res => {\n            return res.data;\n        })\n        .catch(err => {\n            //alert(err.message);\n        })\n}\n\nexport const bridgeStatus = () => {\n    return axios.get(`${routes.SERVER_ADDRESS}/meet/bridge/status`)\n        .then(res => {\n            return res.data;\n        })\n        .catch(err => {\n            //alert(err.message);\n        })\n}\n\nexport const editSubject = (id, subject) => {\n    return axios.get(`${routes.SERVER_ADDRESS}/student-bookings/update/${id}?subject=${subject}`)\n        .then(res => {\n            return res;\n        })\n        .catch(err => {\n            //alert(err.message);\n        })\n}\n\nexport const getBooking = (id) => {\n    return axios.get(`${routes.SERVER_ADDRESS}/student-booking/${id}`)\n        .then(res => {\n            return res;\n        })\n        .catch(err => {\n            //alert(err.message);\n        })\n}\n\nexport const editSubjectGrade = (id, subjects, grades) => {\n    return axios.get(`${routes.SERVER_ADDRESS}/teachers_availabilities/update/${id}?subjects=${subjects}&grades=${grades}`)\n        .then(res => {\n            return res;\n        })\n        .catch(err => {\n            //alert(err.message);\n        })\n}\n\nexport const deleteSchedule = (ids) => {\n    let data = ids.split(',');\n    let url = '';\n    data.forEach((d, i) => {\n        if(i == data.length-1)\n            url += 'id='+d\n        else \n            url += 'id='+d+'&'\n    })\n    return axios.delete(`${routes.SERVER_ADDRESS}/schedule?${url}`).then(res => {\n        return res;\n    }).catch(err => console.log(err));\n}\n\nexport const deleteStudentProfiles = (ids) => {\n    let data = ids.split(',');\n    let url = '';\n    data.forEach((d, i) => {\n        if(i == data.length-1)\n            url += 'id='+d\n        else \n            url += 'id='+d+'&'\n    })\n    return axios.delete(`${routes.SERVER_ADDRESS}/schedule?${url}`).then(res => {\n        return res;\n    }).catch(err => console.log(err));\n}\n\nexport const deleteTeacherProfile = (ids) => {\n    let data = ids.split(',');\n    let url = '';\n    data.forEach((d, i) => {\n        if(i == data.length-1)\n            url += 'id='+d\n        else \n            url += 'id='+d+'&'\n    })\n    return axios.delete(`${routes.SERVER_ADDRESS}/schedule?${url}`).then(res => {\n        return res;\n    }).catch(err => console.log(err));\n}\n\nexport const deleteParents = (ids) => {\n    let data = ids.split(',');\n    let url = '';\n    data.forEach((d, i) => {\n        if(i == data.length-1)\n            url += 'id='+d\n        else \n            url += 'id='+d+'&'\n    })\n    return axios.delete(`${routes.SERVER_ADDRESS}/student-parent?${url}`).then(res => {\n        return res;\n    }).catch(err => console.log(err));\n}\n\nexport const deleteAvailabilities = (ids) => {\n    let data = ids.split(',');\n    let url = '';\n    data.forEach((d, i) => {\n        if(i == data.length-1)\n            url += 'id='+d\n        else \n            url += 'id='+d+'&'\n    })\n    return axios.delete(`${routes.SERVER_ADDRESS}/teacher-availability?${url}`).then(res => {\n        return res;\n    }).catch(err => console.log(err));\n}\n\nexport const deleteBookings = (ids) => {\n    let data = ids.split(',');\n    let url = '';\n    data.forEach((d, i) => {\n        if(i == data.length-1)\n            url += 'id='+d\n        else \n            url += 'id='+d+'&'\n    })\n    return axios.delete(`${routes.SERVER_ADDRESS}/student-booking?${url}`).then(res => {\n        return res;\n    }).catch(err => console.log(err));\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useEffect } from 'react'\nimport { Row, Col, PageHeader, Card, Table, Spin, Tooltip, Button } from 'antd';\nimport { useLocation } from \"react-router-dom\";\nimport { getStudentListById } from '../../services/Student'\nimport Moment from 'react-moment';\nimport { useHistory } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCircle } from '@fortawesome/free-solid-svg-icons'\n\nfunction StudentDetail(props) {\n\n    const location = useLocation();\n    const history = useHistory();\n    const { params } = props.match;\n    const [bookings, setBookings] = useState([]);\n    const [bookingsLoading, setBookingsLoading] = useState(true);\n    const [studentDetail, setStudentDetail] = useState(location.state.student);\n\n    useEffect(() => {\n        console.log(studentDetail)\n        getDetailView();\n    }, []);\n\n    const getDetailView = () => {\n        setBookingsLoading(true);\n        getStudentListById(location.state.student.id, 'profileId').then(data => {\n            data.content.forEach(student => {\n                let elt = new Object();\n                elt.studentProfile = new Object();\n                elt.studentProfile.firstName = student.studentProfile.firstName;\n                elt.studentProfile.grade = student.studentProfile.grade;\n                elt.studentProfile.lastName = student.studentProfile.lastName;\n                elt.studentProfile.onlineStatus = student.studentProfile.onlineStatus;\n                // elt.studentProfile.subject = student.subject;\n                elt.studentProfile.id = student.studentProfile.id;\n                elt.studentProfile.schedule = student.schedule;\n                elt.studentProfile.studentProfile = student.studentProfile\n                setBookings([...bookings, elt.studentProfile]);\n            });\n        }).catch((err) => { console.log(err); setBookings([]) })\n            .finally(() => setBookingsLoading(false))\n    }\n\n    const columns = [\n        {\n            title: <div><span>Name </span>\n            </div>,\n            render: (record) =>\n                <div\n                    style={{ display: \"flex\", flexDirection: 'row', alignItems: \"center\" }}\n                >\n                    <Tooltip title={record.lastSeenRoom != null ? record.lastSeenRoom : \"No last seen room\"}>\n                        <FontAwesomeIcon icon={faCircle} color=\"green\" style={{ display: record.onlineStatus == 0 ? \"block\" : \"none\" }} />\n                        <FontAwesomeIcon icon={faCircle} color=\"orange\" style={{ display: record.onlineStatus == 1 ? \"block\" : \"none\" }} />\n                        <FontAwesomeIcon icon={faCircle} color=\"red\" style={{ display: record.onlineStatus == 2 ? \"block\" : \"none\" }} />\n                    </Tooltip>\n                    <Tooltip title={(record.firstName + \" \" + record.lastName)}>\n                        <Button\n                            style={{ backgroundColor: \"transparent\", border: \"0px\", cursor: 'pointer', width: \"60%\" }}\n                            onClick={(e) => {\n                                e.stopPropagation();\n                                history.push(`/studentlist/studentDetail/${record.id}`, { student: record })\n                            }}>\n                            <p style={{ width: \"50%\", textAlign: \"left\" }}>\n                                {(record.firstName + \" \" + record.lastName).length <= 20 ?\n                                    record.firstName + \" \" + record.lastName :\n                                    (record.firstName + \" \" + record.lastName).substring(0, 19) + '...'}\n                            </p>\n                        </Button>\n                    </Tooltip>\n                </div>,\n            key: 'name',\n            fixed: 'left',\n        },\n        {\n            title: <div><span>Start Date </span>\n            </div>,\n            render: (record) => (\n                <div>\n                    {\n                        <Moment local format=\"D MMM YYYY HH:MM\" withTitle>\n                            {record.schedule.startDate}\n                        </Moment>\n                    }\n                </div>\n            ),\n            key: 'startDate',\n        },\n        {\n            title: <div><span>End Date </span>\n            </div>,\n            render: (record) => {\n                return (\n                    <div>\n                        {\n                            <Moment local format=\"D MMM YYYY HH:MM\" withTitle>\n                                {record.schedule.endDate}\n                            </Moment>\n                        }\n                    </div>\n                )\n            },\n            key: 'endDate',\n        },\n        {\n            title: <div><span>Subject</span>\n            </div>,\n            render: (record) => (\n                <div>\n                    {record.schedule.subject}\n                </div>\n            ),\n            key: 'subject',\n        },\n        {\n            title: 'Grade',\n            dataIndex: 'grade',\n            key: 'grade',\n        },\n    ];\n\n    return (\n        <div>\n            {studentDetail ?\n                <PageHeader\n                    ghost={false}\n                    extra={[\n                        <div style={{ display: 'flex' }}>\n                            <Button key='3' type=\"primary\"\n                                style={{ display: 'flex' }}\n                                onClick={(e) => { e.stopPropagation(); history.push(`/studentprofiles/${studentDetail.id}/update`, { student: studentDetail }) }}\n                            >\n                                Edit\n                            </Button>\n                        </div>\n                    ]}\n                    title={<p style={{ fontSize: '3em', textAlign: 'center', marginTop: '20px', marginBottom: '20px'  }}>{studentDetail.firstName} {studentDetail.lastName}</p>}\n                >\n\n                    <Row gutter={24} style={{ marginBottom: '3%' }}>\n                        <Card title=\"Student informations\" hoverable={true} bordered={true} style={{ width: \"48%\", marginLeft: '2%' }}>\n                            <Row gutter={16}>\n                                <Col className=\"gutter-row\" span={8}>\n                                    <h4>Period</h4>\n                                </Col>\n                                <Col className=\"gutter-row\" span={14}>\n                                    <h4 >\n                                        <Moment local format=\"D MMM YYYY HH:MM\" withTitle>\n                                            {studentDetail.startDate}\n                                        </Moment>\n                                    </h4>\n                                </Col>\n                            </Row>\n                            <Row gutter={16}>\n                                <Col className=\"gutter-row\" span={8}>\n                                    <h4>Grade</h4>\n                                </Col>\n                                <Col className=\"gutter-row\" span={14}>\n                                    <h4 >{studentDetail.grade}</h4>\n                                </Col>\n                            </Row>\n                            <Row gutter={16}>\n                                <Col className=\"gutter-row\" span={8}>\n                                    <h4 >Email</h4>\n                                </Col>\n                                <Col className=\"gutter-row\" span={14}>\n                                    <h4 >{studentDetail.email}</h4>\n                                </Col>\n                            </Row>\n                            <Row gutter={16}>\n                                <Col className=\"gutter-row\" span={8}>\n                                    <h4 >Conference URL</h4>\n                                </Col>\n                                <Col className=\"gutter-row\" span={14}>\n                                    <h4 onClick={() => window.open(studentDetail.conferenceUrl.includes('http') ? studentDetail.conferenceUrl : 'http://' + studentDetail.conferenceUrl)}>{studentDetail.conferenceUrl}</h4>\n                                </Col>\n                            </Row>\n                            <Row gutter={16}>\n                                <Col className=\"gutter-row\" span={8}>\n                                    <h4>Parent Email</h4>\n                                </Col>\n                                <Col className=\"gutter-row\" span={14}>\n                                    <h4 >{studentDetail.parent ? studentDetail.parent.email : ''}</h4>\n                                </Col>\n                            </Row>\n                            <Row gutter={16}>\n                                <Col className=\"gutter-row\" span={8}>\n                                    <h4>School Name</h4>\n                                </Col>\n                                <Col className=\"gutter-row\" span={14}>\n                                    <h4 >{studentDetail.schoolName}</h4>\n                                </Col>\n                            </Row>\n                            <Row gutter={16}>\n                                <Col className=\"gutter-row\" span={8}>\n                                    <h4>School Board</h4>\n                                </Col>\n                                <Col className=\"gutter-row\" span={14}>\n                                    <h4 >{studentDetail.schoolBoard}</h4>\n                                </Col>\n                            </Row>\n                        </Card>\n                    </Row>\n                    {bookingsLoading ? <Spin /> :\n\n                        <>\n                            <h2>{studentDetail.firstName} {studentDetail.lastName}'s bookings </h2>\n                            <Table\n                                columns={columns}\n                                dataSource={bookings}\n                                rowKey=\"id\"\n                            />\n                        </>\n                    }\n                </PageHeader> : null}\n        </div>\n    )\n}\n\nexport default StudentDetail\n"],"sourceRoot":""}